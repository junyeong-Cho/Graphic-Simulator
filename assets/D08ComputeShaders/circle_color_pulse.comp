#version 430

layout(local_size_x = 16, local_size_y = 16) in;

uniform float u_time;
uniform vec2 u_resolution;

layout(binding = 0, rgba8) uniform image2D outputImage;

void main()
{
    ivec2 id = ivec2(gl_GlobalInvocationID.xy);
    vec2 coord = vec2(id) / u_resolution;
    vec3 color = vec3(0.0);
    vec2 translate = vec2(-0.5);
    coord += translate;

    color.r = abs(0.1 + length(coord) - 0.6 * abs(sin(u_time * 0.9 / 12.0)));
    color.g = abs(0.1 + length(coord) - 0.6 * abs(sin(u_time * 0.6 / 4.0)));
    color.b = abs(0.1 + length(coord) - 0.6 * abs(sin(u_time * 0.3 / 9.0)));

    vec4 finalColor = vec4(0.1 / color, 1.0);

    imageStore(outputImage, id, finalColor);
}
